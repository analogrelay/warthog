Binary,Old Name,New Name,Type,Implementation
0x00,unreachable,unreachable,,
0x01,nop,nop,,
0x02,block,block,block,
0x03,loop,loop,block,
0x04,if,if,block,
0x0C,br,br,index,
0x0D,br_if,br_if,index,
0x0E,br_table,br_table,branch-table,
0x10,call,call,index,
0x11,call_indirect,call_indirect,table-index,
0x1A,drop,drop,,
0x1B,select,select,,
0x20,get_local,local.get,index,
0x21,set_local,local.set,index,
0x22,tee_local,local.tee,index,
0x23,get_global,global.get,index,
0x24,set_global,global.set,index,
0x28,i32.load,i32.load,memarg,
0x29,i64.load,i64.load,memarg,
0x2A,f32.load,f32.load,memarg,
0x2B,f64.load,f64.load,memarg,
0x2C,i32.load8_s,i32.load8_s,memarg,
0x2D,i32.load8_u,i32.load8_u,memarg,
0x2E,i32.load16_s,i32.load16_s,memarg,
0x2F,i32.load16_u,i32.load16_u,memarg,
0x30,i64.load8_s,i64.load8_s,memarg,
0x31,i64.load8_u,i64.load8_u,memarg,
0x32,i64.load16_s,i64.load16_s,memarg,
0x33,i64.load16_u,i64.load16_u,memarg,
0x34,i64.load32_s,i64.load32_s,memarg,
0x35,i64.load32_u,i64.load32_u,memarg,
0x36,i32.store,i32.store,memarg,
0x37,i64.store,i64.store,memarg,
0x38,f32.store,f32.store,memarg,
0x39,f64.store,f64.store,memarg,
0x3A,i32.store8,i32.store8,memarg,
0x3B,i32.store16,i32.store16,memarg,
0x3C,i64.store8,i64.store8,memarg,
0x3D,i64.store16,i64.store16,memarg,
0x3E,i64.store32,i64.store32,memarg,
0x3F,memory.size,memory.size,index,
0x40,memory.grow,memory.grow,index,
0x41,i32.const,i32.const,const,
0x42,i64.const,i64.const,const,
0x43,f32.const,f32.const,const,
0x44,f64.const,f64.const,const,
0x45,i32.eqz,i32.eqz,,eqz::<u32>
0x46,i32.eq,i32.eq,,eq::<u32>
0x47,i32.ne,i32.ne,,ne::<u32>
0x48,i32.lt_s,i32.lt_s,,lt_s::<u32>
0x49,i32.lt_u,i32.lt_u,,lt_u::<u32>
0x4A,i32.gt_s,i32.gt_s,,gt_s::<i32>
0x4B,i32.gt_u,i32.gt_u,,gt_u::<i32>
0x4C,i32.le_s,i32.le_s,,le_s::<i32>
0x4D,i32.le_u,i32.le_u,,le_u::<i32>
0x4E,i32.ge_s,i32.ge_s,,ge_s::<i32>
0x4F,i32.ge_u,i32.ge_u,,ge_u::<i32>
0x50,i64.eqz,i64.eqz,,eqz::<u64>
0x51,i64.eq,i64.eq,,eq::<u64>
0x52,i64.ne,i64.ne,,ne::<u64>
0x53,i64.lt_s,i64.lt_s,,lt_s::<u64>
0x54,i64.lt_u,i64.lt_u,,lt_u::<u64>
0x55,i64.gt_s,i64.gt_s,,gt_s::<u64>
0x56,i64.gt_u,i64.gt_u,,gt_u::<u64>
0x57,i64.le_s,i64.le_s,,le_s::<u64>
0x58,i64.le_u,i64.le_u,,le_u::<u64>
0x59,i64.ge_s,i64.ge_s,,ge_s::<u64>
0x5A,i64.ge_u,i64.ge_u,,ge_u::<i64>
0x5B,f32.eq,f32.eq,,eq::<f32>
0x5C,f32.ne,f32.ne,,ne::<f32>
0x5D,f32.lt,f32.lt,,lt::<f32>
0x5E,f32.gt,f32.gt,,gt::<f32>
0x5F,f32.le,f32.le,,le::<f32>
0x60,f32.ge,f32.ge,,ge::<f32>
0x61,f64.eq,f64.eq,,eq::<f64>
0x62,f64.ne,f64.ne,,ne::<f64>
0x63,f64.lt,f64.lt,,lt::<f64>
0x64,f64.gt,f64.gt,,gt::<f64>
0x65,f64.le,f64.le,,le::<f64>
0x66,f64.ge,f64.ge,,ge::<f64>
0x67,i32.clz,i32.clz,,clz::<u32>
0x68,i32.ctz,i32.ctz,,ctz::<u32>
0x69,i32.popcnt,i32.popcnt,,popcnt::<u32>
0x6A,i32.add,i32.add,,add::<i32>
0x6B,i32.sub,i32.sub,,sub::<i32>
0x6C,i32.mul,i32.mul,,mul::<i32>
0x6D,i32.div_s,i32.div_s,,div_s::<i32>
0x6E,i32.div_u,i32.div_u,,div_u::<i32>
0x6F,i32.rem_s,i32.rem_s,,rem_s::<i32>
0x70,i32.rem_u,i32.rem_u,,rem_u::<u32>
0x71,i32.and,i32.and,,and::<u32>
0x72,i32.or,i32.or,,or::<u32>
0x73,i32.xor,i32.xor,,xor::<u32>
0x74,i32.shl,i32.shl,,shl::<u32>
0x75,i32.shr_s,i32.shr_s,,shr_s::<u32>
0x76,i32.shr_u,i32.shr_u,,shr_u::<u32>
0x77,i32.rotl,i32.rotl,,rotl::<u32>
0x78,i32.rotr,i32.rotr,,rotr::<u32>
0x79,i64.clz,i64.clz,,clz::<u64>
0x7A,i64.ctz,i64.ctz,,ctz::<i64>
0x7B,i64.popcnt,i64.popcnt,,popcnt::<i64>
0x7C,i64.add,i64.add,,add::<i64>
0x7D,i64.sub,i64.sub,,sub::<i64>
0x7E,i64.mul,i64.mul,,mul::<i64>
0x7F,i64.div_s,i64.div_s,,div_s::<i64>
0x80,i64.div_u,i64.div_u,,div_u::<u64>
0x81,i64.rem_s,i64.rem_s,,rem_s::<u64>
0x82,i64.rem_u,i64.rem_u,,rem_u::<u64>
0x83,i64.and,i64.and,,and::<u64>
0x84,i64.or,i64.or,,or::<u64>
0x85,i64.xor,i64.xor,,xor::<u64>
0x86,i64.shl,i64.shl,,shl::<u64>
0x87,i64.shr_s,i64.shr_s,,shr_s::<u64>
0x88,i64.shr_u,i64.shr_u,,shr_u::<u64>
0x89,i64.rotl,i64.rotl,,rotl::<u64>
0x8A,i64.rotr,i64.rotr,,rotr::<i64>
0x8B,f32.abs,f32.abs,,abs::<f32>
0x8C,f32.neg,f32.neg,,neg::<f32>
0x8D,f32.ceil,f32.ceil,,ceil::<f32>
0x8E,f32.floor,f32.floor,,floor::<f32>
0x8F,f32.trunc,f32.trunc,,trunc::<f32>
0x90,f32.nearest,f32.nearest,,nearest::<f32>
0x91,f32.sqrt,f32.sqrt,,sqrt::<f32>
0x92,f32.add,f32.add,,add::<f32>
0x93,f32.sub,f32.sub,,sub::<f32>
0x94,f32.mul,f32.mul,,mul::<f32>
0x95,f32.div,f32.div,,div::<f32>
0x96,f32.min,f32.min,,min::<f32>
0x97,f32.max,f32.max,,max::<f32>
0x98,f32.copysign,f32.copysign,,copysign::<f32>
0x99,f64.abs,f64.abs,,abs::<f64>
0x9A,f64.neg,f64.neg,,neg::<f64>
0x9B,f64.ceil,f64.ceil,,ceil::<f64>
0x9C,f64.floor,f64.floor,,floor::<f64>
0x9D,f64.trunc,f64.trunc,,trunc::<f64>
0x9E,f64.nearest,f64.nearest,,nearest::<f64>
0x9F,f64.sqrt,f64.sqrt,,sqrt::<f64>
0xA0,f64.add,f64.add,,add::<f64>
0xA1,f64.sub,f64.sub,,sub::<f64>
0xA2,f64.mul,f64.mul,,mul::<f64>
0xA3,f64.div,f64.div,,div::<f64>
0xA4,f64.min,f64.min,,min::<f64>
0xA5,f64.max,f64.max,,max::<f64>
0xA6,f64.copysign,f64.copysign,,copysign::<f64>
0xA7,i32.wrap/i64,i32.wrap_i64,,"wrap::<u32, u64>"
0xA8,i32.trunc_s/f32,i32.trunc_f32_s,,"convert::<i32, f32>"
0xA9,i32.trunc_u/f32,i32.trunc_f32_u,,"convert::<u32, f32>"
0xAA,i32.trunc_s/f64,i32.trunc_f64_s,,"convert::<i32, f64>"
0xAB,i32.trunc_u/f64,i32.trunc_f64_u,,"convert::<u32, f64>"
0xAC,i64.extend_s/i32,i64.extend_i32_s,,"convert::<i64, i32>"
0xAD,i64.extend_u/i32,i64.extend_i32_u,,"convert::<u64, u32>"
0xAE,i64.trunc_s/f32,i64.trunc_f32_s,,"convert::<i64, f32>"
0xAF,i64.trunc_u/f32,i64.trunc_f32_u,,"convert::<u64, f32>"
0xB0,i64.trunc_s/f64,i64.trunc_f64_s,,"convert::<i64, f64>"
0xB1,i64.trunc_u/f64,i64.trunc_f64_u,,"convert::<u64, f64>"
0xB2,f32.convert_s/i32,f32.convert_i32_s,,"convert::<f32, i32>"
0xB3,f32.convert_u/i32,f32.convert_i32_u,,"convert::<f32, u32>"
0xB4,f32.convert_s/i64,f32.convert_i64_s,,"convert::<f32, i64>"
0xB5,f32.convert_u/i64,f32.convert_i64_u,,"convert::<f32, u64>"
0xB6,f32.demote/f64,f32.demote_f64,,"convert::<f32, f64>"
0xB7,f64.convert_s/i32,f64.convert_i32_s,,"convert::<f64, i32>"
0xB8,f64.convert_u/i32,f64.convert_i32_u,,"convert::<f64, u32>"
0xB9,f64.convert_s/i64,f64.convert_i64_s,,"convert::<f64, i64>"
0xBA,f64.convert_u/i64,f64.convert_i64_u,,"convert::<f64, u64>"
0xBB,f64.promote/f32,f64.promote_f32,,"convert::<f64, f32>"
0xBC,i32.reinterpret/f32,i32.reinterpret_f32,,"reinterpret::<u32, f32>"
0xBD,i64.reinterpret/f64,i64.reinterpret_f64,,"reinterpret::<u64, f64>"
0xBE,f32.reinterpret/i32,f32.reinterpret_i32,,"reinterpret::<f32, u32>"
0xBF,f64.reinterpret/i64,f64.reinterpret_i64,,"reinterpret::<f64, u64>"
0x0B,end,end,,
0x05,else,else,,
